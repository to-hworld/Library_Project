--도서관 회원
create table MEMBER(
    ID VARCHAR2 PRIMARY KEY,
    PASS VARCHAR2 NOT NULL,
    NAME VARCHAR2 NOT NULL,
    REG_DATE DATE NOT NULL,
    PHONE_NO NUMBER(11) NOT NULL,
    EMAIL VARCHAR2,
    REG_LIB VARCHAR2 NOT NULL,
    AGREE CHAR DEFAULT 'Y',
    CONSTRAINT MEMBER_REQ_LIB_FK FOREIGN  KEY (REQ_LIB) 
    REFERENCES LIBRARY(LIB_NAME),
    CONSTRAINT MEMBER_PHONE_NO_CHECK CHECK (LENGTH(PHONE_NO) <= 11),
    CONSTRAINT MEMBER_AGREE_CHECK CHECK (AGREE IN (Y,N))
);
--도서관
create table LIBRARY(
    LIB_NAME VARCHAR2 PRIMARY KEY,
    CLOSED DATE NOT NULL,
    CON_NUMBER VARCHAR2 NOT NULL
);
--소장 도서
create table LIBRARY_BOOK(
    ISBN NUMBER PRIMARY KEY,
    TITLE VARCHAR2 NOT NULL,
    PUBLISHER VARCHAR2 NOT NULL,
    PUB_DATE DATE NOT NULL,
    AUTHOR VARCHAR2 NOT NULL,
    CHECK_OUT CHAR DEFAULT 'N',
    DUE_DATE DATE,
    HOLDING_LIB VARCHAR2 NOT NULL,
    CATE VARCHAR2 NOT NULL,
    LOC NUMBER NOT NULL,
    CONSTRAINT LIBRARY_BOOK_HOLDING_LIB_FK FOREIGN  KEY (HOLDING_LIB) 
    REFERENCES LIBRARY(LIB_NAME),
    CONSTRAINT LIBRARY_BOOK_CATE_FK FOREIGN  KEY (CATE) 
    REFERENCES CATEGORY(CATE_NO),
    CONSTRAINT LIBRARY_BOOK_LOC_FK FOREIGN  KEY (LOC) 
    REFERENCES BOOK_LOC(LOC_NO),
    CONSTRAINT LIBRARY_BOOK_CHECK_OUT_CHECK CHECK (CHECK_OUT IN (Y,N))
);
--도서 위치
create table BOOK_LOC(
    LOC_NO NUMBER PRIMARY KEY,
    LIBRARY VARCHAR2 NOT NULL,
    SUPER_LOC VARCHAR2 NOT NULL,
    SUB_LOC VARCHAR2 NOT NULL,
    CONSTRAINT BOOK_LOC_LIBRARY_FK FOREIGN  KEY (LIBRARY) 
    REFERENCES LIBRARY(LIB_NAME)
);
--카테고리
create table CATEGORY(
    CATE_NO NUMBER PRIMARY KEY,
    SUPER_CATE VARCHAR2 NOT NULL,
    SUB_CATE VARCHAR2 NOT NULL
);
--도서 예약
create table BOOK_RESERVATION(
    ID VARCHAR2,
    ISBN VARCHAR2,
    TITLE VARCHAR2 NOT NULL,
    HOLDING_LIB VARCHAR2 NOT NULL,
    BOOKING DATE NOT NULL,
    RECEIPT_DATE DATE NOT NULL,
    CONSTRAINT BOOK_RESERVATION_PK PRIMARY KEY(ID, ISBN),
    CONSTRAINT BOOK_RESERVATION_ID_FK FOREIGN  KEY (ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT BOOK_RESERVATION_ISBN_FK FOREIGN  KEY (ISBN) 
    REFERENCES LIBRARY_BOOK(ISBN),
    CONSTRAINT BOOK_RESERVATION_TITLE_FK FOREIGN  KEY (TITLE) 
    REFERENCES LIBRARY_BOOK(TITLE),
    CONSTRAINT BOOK_RESERVATION_HOLDING_LIB_FK FOREIGN  KEY (HOLDING_LIB) 
    REFERENCES LIBRARY(LIB_NAME)
);
--도서 대출
create table BOOK_RENT(
    ID VARCHAR2,
    ISBN VARCHAR2,
    TITLE VARCHAR2 NOT NULL,
    HOLDING_LIB VARCHAR2 NOT NULL,
    RECEIPT_DATE DATE NOT NULL,
    CONSTRAINT BOOK_RENT_PK PRIMARY KEY(ID, ISBN),
    CONSTRAINT BOOK_RENT_ID_FK FOREIGN  KEY (ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT BOOK_RENT_ISBN_FK FOREIGN  KEY (ISBN) 
    REFERENCES LIBRARY_BOOK(ISBN),
    CONSTRAINT BOOK_RENT_TITLE_FK FOREIGN  KEY (TITLE) 
    REFERENCES LIBRARY_BOOK(TITLE),
    CONSTRAINT BOOK_RENT_HOLDING_LIB_FK FOREIGN  KEY (HOLDING_LIB) 
    REFERENCES LIBRARY(LIB_NAME)
);
--희망 도서
create table REQUESTED_BOOK(
    REQ_ID VARCHAR2,
    ISBN VARCHAR2,
    REQ_BOOK VARCHAR2 NOT NULL,
    REQ_DATE DATE NOT NULL,
    CONSTRAINT REQUESTED_BOOK_PK PRIMARY KEY(REQ_ID, ISBN),
    CONSTRAINT REQUESTED_BOOK_REQ_ID_FK FOREIGN  KEY (REQ_ID) 
    REFERENCES MEMBER(ID)
);
--관심 도서
create table INTEREST_BOOK(
    MEM_ID VARCHAR2 PRIMARY KEY,
    TITLE VARCHAR2 NOT NULL,
    ISBN VARCHAR2 NOT NULL,
    CONSTRAINT INTEREST_BOOK_MEM_ID_FK FOREIGN  KEY (MEM_ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT INTEREST_BOOK_TITLE_FK FOREIGN  KEY (TITLE) 
    REFERENCES LIBRARY_BOOK(TITLE),
    CONSTRAINT INTEREST_BOOK_ISBN_FK FOREIGN  KEY (ISBN) 
    REFERENCES LIBRARY_BOOK(ISBN)
);
--상호대차 신청
create table INTERLIBRARY(
    ID VARCHAR2 PRIMARY KEY,
    ISBN VARCHAR2 NOT NULL,
    TITLE VARCHAR2 NOT NULL,
    HOLDING_LIB VARCHAR2 NOT NULL,
    REQ_LIB VARCHAR2 NOT NULL,
    REQ_DATE DATE NOT NULL,
    CONSTRAINT INTERLIBRARY_ID_FK FOREIGN  KEY (ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT INTERLIBRARY_ISBN_FK FOREIGN  KEY (ISBN) 
    REFERENCES LIBRARY_BOOK(ISBN),
    CONSTRAINT INTERLIBRARY_TITLE_FK FOREIGN  KEY (TITLE) 
    REFERENCES LIBRARY_BOOK(TITLE),
    CONSTRAINT INTERLIBRARY_HOLDING_LIB_FK FOREIGN  KEY (HOLDING_LIB) 
    REFERENCES LIBRARY(LIB_NAME),
    CONSTRAINT INTERLIBRARY_REQ_LIB_FK FOREIGN  KEY (REQ_LIB) 
    REFERENCES LIBRARY(LIB_NAME)
);
--도서 이용내역
create table RENTAL_LIST(
    ID VARCHAR2,
    ISBN VARCHAR2,
    TITLE VARCHAR2 NOT NULL,
    RECEIPT_DATE DATE NOT NULL,
    RETURN_DATE DATE,
    CONSTRAINT RENTAL_LIST_PK PRIMARY KEY(ID, ISBN),
    CONSTRAINT RENTAL_LIST_ID_FK FOREIGN  KEY (ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT RENTAL_LIST_ISBN_FK FOREIGN  KEY (ISBN) 
    REFERENCES LIBRARY_BOOK(ISBN),
    CONSTRAINT RENTAL_LIST_TITLE_FK FOREIGN  KEY (TITLE) 
    REFERENCES LIBRARY_BOOK(TITLE)
);
--도서관 주소
create table ADDRESS(
    LIB_NAME VARCHAR2 PRIMARY KEY,
    CITY VARCHAR2 NOT NULL,
    BOROUGH VARCHAR2 NOT NULL,
    DISTRICT VARCAHR2 NOT NULL,
    CONSTRAINT ADDRESS_LIB_NAME_FK FOREIGN  KEY (LIB_NAME) 
    REFERENCES LIBRARY(LIB_NAME)
);
--자료현황
create table HOLDING(
    LIB_NAME VARCHAR2 PRIMARY KEY,
    GENERAL NUMBER DEFAULT 0,
    NONBOOK NUMBER DEFAULT 0,
    CONSTRAINT HOLDING_LIB_NAME_FK FOREIGN  KEY (LIB_NAME) 
    REFERENCES LIBRARY(LIB_NAME),
    CONSTRAINT HOLDING_GENERAL_CHECK CHECK (GENERAL >= 0),
    CONSTRAINT HOLDING_NONBOOK_CHECK CHECK (NONBOOK >= 0)
);
--게시판
create table BOARD(
    BOARD_NO NUMBER PRIMARY KEY,
    BOARD_TITLE VARCHAR2 NOT NULL,
    WRITER_ID VARCHAR2 NOT NULL,
    WRITE_DATE DATE NOT NULL,
    REPLY CHAR DEFAULT 'N',
    OPEN CHAR DEFAULT 'N',
    CONSTRAINT BOARD_WRITER_ID_FK FOREIGN  KEY (WRITER_ID) 
    REFERENCES MEMBER(ID),
    CONSTRAINT BOARD_REPLY_CHECK CHECK (REPLY IN (Y,N)),
    CONSTRAINT BOARD_OPEN_CHECK CHECK (OPEN IN (Y,N))
);
--게시물내용
create table BOARD_CONTENT(
    CONTENT_NO NUMBER PRIMARY KEY,
    CONTENT VARCHAR2 NOT NULL,
    CONSTRAINT HOLDING_CONTENT_NO_FK FOREIGN  KEY (CONTENT_NO) 
    REFERENCES BOARD(BOARD_NO)
);